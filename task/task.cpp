/*
############################################ ЗАДАНИЕ ###########################################
				Виртуальные функции
	Создайте иерархию классов по работе с файлами. Базовый класс должен
открывать файл и отображать его содержимое в консоль. Первый класс
потомка должен открывать файл и отображать его содержимое в виде ASCIIкодов символов, расположенных в файле.
	Второй производный класс должен
открывать файл и отображать его содержимое в шестнадцатеричном виде.
	Для отображения содержимого файла в базовом классе необходимо
определить виртуальную функцию.
	• void v_Display(const char * path);
	• path — путь к файлу.
	Потомки должны создать свою реализацию виртуальной функции.
################################################################################################
02.49.00
*/

#include "Read_A.h"
#include <iostream>
#include <windows.h>

using std::cout;
using std::cin;

int main()
{
	SetConsoleCP(1251);
	/*
	Задает кодовую страницу ввода, используемую консолью, связанной с вызывающим процессом.
	Консоль использует страницу входного кода для преобразования ввода с клавиатуры
	в соответствующее символьное значение.
	*/
	SetConsoleOutputCP(1251);
	/*
	Задает выходную кодовую страницу, используемую консолью, связанной с вызывающим процессом.
	Консоль использует свою кодовую страницу вывода для преобразования символьных значений,
	записанных различными функциями вывода, в изображения, отображаемые в окне консоли.
	*/

	/*char ch = 'Л';
	cout << int(ch);*/

	cout << "Введите путь к файлу: ";
	char filename[MAX_PATH];
	cin >> filename;
	system("cls");
	int choice;
	cout << "1. Читает текстовый файл и отображает его."
		<< "\n2. Читает текстовый файл и отображает его в виде ASCIIкодов символов."
		<< "\n3. Читает текстовый файл и отображает его в шестнадцатеричном виде."
		<< "\nСделай свой выбор: ";
	cin >> choice;

	Read_A* p = nullptr; // Указатель на базовый класс.

	switch (choice)
	{
	case 1:
	{
		p = new Read_A;
		p->v_Display(filename);
	}
	break;
	case 2:
	{
		p = new Read_B;
		p->v_Display(filename);
	}
	break;
	case 3:
	{
		p = new Read_C;
		p->v_Display(filename);
	}
	}
}